apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki-stack
  namespace: {{ .Values.metadata.namespace }}
spec:
  destination:
    namespace: loki-stack
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  sources:
  - path: manifests/tools/manifests/loki-stack
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
  - chart: loki-stack
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 2.10.2
    helm:
      valuesObject:
        loki:
          enabled: true
          schemaConfig:
            configs:
            - from: 2024-04-01
              store: tsdb
              object_store: s3
              schema: v13
              index:
                prefix: loki_index_
                period: 24h
          ingester:
            chunk_encoding: snappy
          tracing:
            enabled: true
          querier:
            max_concurrent: 4
          deploymentMode: SimpleScalable
          backend:
            replicas: 3
          read:
            replicas: 3
          write:
            replicas: 3
          singleBinary:
            replicas: 0
          ingester:
            replicas: 0
          querier:
            replicas: 0
          queryFrontend:
            replicas: 0
          queryScheduler:
            replicas: 0
          distributor:
            replicas: 0
          compactor:
            replicas: 0
          indexGateway:
            replicas: 0
          bloomCompactor:
            replicas: 0
          bloomGateway:
            replicas: 0
          persistence:
            enabled: true
            storageClassName: slow
        fluent-bit:
          enabled: true
        prometheus:
          enabled: true
          server:
            persistentVolume:
              enabled: true
              storageClass: slow
          alertmanager:
            enabled: true
            persistence:
              enabled: true
              storageClass: slow
        grafana:
          enabled: true
          image:
            tag: 11.2.0
          envFromSecret: akv-secret
          persistence:
            enabled: true
            type: pvc
            storageClassName: slow
          initChownData:
            enable: false
          grafana.ini:
            server:
              root_url: https://grafana.matoru.ru
            users:
              allow_sign_up: false
              auto_assign_org: true
              auto_assign_org_role: Viewer
            auth:
              disable_login_form: true
            auth.basic:
              enabled: false
            auth.azuread:
              name: Azure AD
              enabled: true
              allow_sign_up: true
              auto_login: true
              client_id: $__env{GRAFANA_CLIENT_ID}
              client_secret: $__env{GRAFANA_CLIENT_SECRET}
              scopes: openid email profile
              auth_url: https://login.microsoftonline.com/$__env{TENANT_ID}/oauth2/v2.0/authorize
              token_url: https://login.microsoftonline.com/$__env{TENANT_ID}/oauth2/v2.0/token
              allowed_domains: 
              allowed_group:
              allowed_organizations: $__env{TENANT_ID}
              role_attribute_strict: false
              allow_assign_grafana_admin: false
              skip_org_role_sync: false
              use_pkce: true
          # Provision grafana-dashboards-kubernetes
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'grafana-dashboards-kubernetes'
                orgId: 1
                folder: 'Kubernetes'
                type: file
                disableDeletion: true
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
          dashboards:
            grafana-dashboards-kubernetes:
              k8s-system-api-server:
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
                token: ''
              k8s-system-coredns:
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
                token: ''
              k8s-views-global:
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
                token: ''
              k8s-views-namespaces:
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
                token: ''
              k8s-views-nodes:
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
                token: ''
                url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
                token: ''
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
