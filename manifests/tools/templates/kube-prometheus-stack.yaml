apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: {{ .Values.metadata.namespace }}
spec:
  destination:
    namespace: kube-prometheus
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  sources:
  - path: manifests/tools/manifests/kube-prometheus-stack
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
  - chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 62.5.1
    helm:
      valuesObject:
        fullnameOverride: monitoring
        prometheus:
          annotations:
            argocd.argoproj.io/skip-health-check: 'true'
        grafana:
          envFromSecret: akv-secret
          grafana.ini:
            server:
              root_url: https://prometheus.matoru.ru
            users:
              allow_sign_up: false
              auto_assign_org: true
              auto_assign_org_role: Editor
            auth.azuread:
              name: Azure AD
              enabled: true
              allow_sign_up: true
              auto_login: false
              client_id: $__env{PROMETHEUS_CLIENT_ID}
              client_secret: $__env{PROMETHEUS_CLIENT_SECRET}
              scopes: openid email profile
              auth_url: https://login.microsoftonline.com/$__env{TENANT_ID}/oauth2/v2.0/authorize
              token_url: https://login.microsoftonline.com/$__env{TENANT_ID}/oauth2/v2.0/token
              allowed_domains: 
              allowed_group:
              allowed_organizations: $__env{TENANT_ID}
              role_attribute_strict: false
              allow_assign_grafana_admin: false
              skip_org_role_sync: false
              use_pkce: true
  syncPolicy:
    syncOptions:
    - ServerSideApply=true
    automated:
      selfHeal: true
      prune: true
