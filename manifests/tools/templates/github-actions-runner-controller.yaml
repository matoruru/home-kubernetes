apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: github-actions-runner-controller
  namespace: argocd
spec:
  destination:
    namespace: arc-systems
    server: {{ .Values.spec.destination.server }}
  project: {{ .Values.spec.project }}
  sources:
  - path: manifests/tools/manifests/gha-runner-scale-set-controller
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
  - chart: gha-runner-scale-set-controller
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.9.3
    helm:
      releaseName: arc
  - chart: gha-runner-scale-set
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.9.3
    helm:
      releaseName: raspi-runner-set-playground
      valuesObject:
        githubConfigUrl: https://github.com/matoruru/playground
        githubConfigSecret: pre-defined-secret
        controllerServiceAccount:
          namespace: arc-systems
          name: arc-gha-rs-controller
        template:
          spec:
            containers:
              - name: runner
                image: matoruru/gha-runner-playground:latest
                command: ["/home/runner/run.sh"]
  - chart: gha-runner-scale-set
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.9.3
    helm:
      releaseName: raspi-runner-set-xmonad
      valuesObject:
        githubConfigUrl: https://github.com/matoruru/.xmonad
        githubConfigSecret: pre-defined-secret
        controllerServiceAccount:
          namespace: arc-systems
          name: arc-gha-rs-controller
  - chart: gha-runner-scale-set
    repoURL: ghcr.io/actions/actions-runner-controller-charts
    targetRevision: 0.9.3
    helm:
      releaseName: raspi-runner-set-matoruru
      valuesObject:
        githubConfigUrl: https://github.com/matoruru/matoruru
        githubConfigSecret: pre-defined-secret
        controllerServiceAccount:
          namespace: arc-systems
          name: arc-gha-rs-controller
        template:
          spec:
            initContainers:
            - name: init-dind-externals
              image: ghcr.io/actions/actions-runner:latest
              command: ["cp", "-r", "-v", "/home/runner/externals/.", "/home/runner/tmpDir/"]
              volumeMounts:
              - name: dind-externals
                mountPath: /home/runner/tmpDir
            containers:
            - name: runner
              image: matoruru/gha-runner-matoruru:latest
              command:
              - sh
              - -c
              - /runnertmp/run.sh && chmod 666 /var/run/docker.sock
              env:
              - name: DOCKER_HOST
                value: unix:///var/run/docker.sock
              volumeMounts:
              - name: work
                mountPath: /home/runner/_work
              - name: dind-sock
                mountPath: /var/run
            - name: dind
              image: docker:dind
              args:
              - dockerd
              - --host=unix:///var/run/docker.sock
              - --group=$(DOCKER_GROUP_GID)
              env:
              - name: DOCKER_GROUP_GID
                value: "123"
              securityContext:
                privileged: true
              volumeMounts:
              - name: work
                mountPath: /home/runner/_work
              - name: dind-sock
                mountPath: /var/run
              - name: dind-externals
                mountPath: /home/runner/externals
            volumes:
            - name: work
              emptyDir: {}
            - name: dind-sock
              emptyDir: {}
            - name: dind-externals
              emptyDir: {}
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    automated:
      selfHeal: true
      prune: false # For avoiding infinite loop for AutoscalingListener.
