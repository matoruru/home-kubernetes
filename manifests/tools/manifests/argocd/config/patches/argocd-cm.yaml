- op: add
  path: /data
  value:
    admin.enabled: "false"

    # Enabling Exec tab
    exec.enabled: 'true'

    kustomize.buildOptions: --enable-helm

    # https://argo-cd.readthedocs.io/en/stable/user-guide/status-badge/#status-badge
    statusbadge.enabled: 'true'

    # SSO: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/microsoft/
    url: https://argocd.matoru.ru/ # Replace with the external base URL of your Argo CD
    oidc.config: |
      name: Azure
      issuer: https://login.microsoftonline.com/640dd2c2-336d-4abf-b0ee-0024877ea3fb/v2.0
      clientID: 43d9ca70-41c6-4210-a3cc-eb7717b1f4bc
      clientSecret: $oidc.azure.clientSecret
      requestedIDTokenClaims:
        groups:
          essential: true
      requestedScopes:
      - openid
      - profile
      - email

    # https://github.com/argoproj/argo-cd/issues/11261#issuecomment-1596893850
    resource.customizations: |
      monitoring.coreos.com/Prometheus:
        health.lua: |
          if obj.metadata.annotations ~= nil and obj.metadata.annotations["argocd.argoproj.io/skip-health-check"] ~= nil then
            hs = {}
            hs.status = "Healthy"
            hs.message = "Ignoring Prometheus Health Check"
            return hs
          end
          
          hs={ status = "Progressing", message = "Waiting for initialization" }
          if obj.status ~= nil then
            if obj.status.conditions ~= nil then
              for i, condition in ipairs(obj.status.conditions) do

                if condition.type == "Available" and condition.status ~= "True" then
                  if condition.reason == "SomePodsNotReady" then
                    hs.status = "Progressing"
                  else
                    hs.status = "Degraded"
                  end
                  hs.message = condition.message or condition.reason
                end
                if condition.type == "Available" and condition.status == "True" then
                  hs.status = "Healthy"
                  hs.message = "All instances are available"
                end
              end
            end
          end
          return hs
    resource.customizations.useOpenLibs.monitoring.coreos.com_Prometheus: 'true'
